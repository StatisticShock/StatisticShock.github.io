/* FONTS */
@font-face {
	font-family: OpenSans;
	src: url(font/OpenSans.ttf);
}

@font-face {
	font-family: Hylia Serif;
	src: url(font/HyliaSerifBeta-Regular.otf);
}

/* THE ACTUAL THING */
/* Default */
:root {
	--pink-custom: rgba(240, 36, 117, 1);
	--pink-purple: linear-gradient(163deg, var(--pink-custom) 0%, #3700ff 100%);

	--arrow: url('data:image/svg+xml,<svg fill="context-fill" height="100%" width="100%" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 330 330" xml:space="preserve"><title>arrow</title><path id="XMLID_222_" d="M250.606,154.389l-150-149.996c-5.857-5.858-15.355-5.858-21.213,0.001 c-5.857,5.858-5.857,15.355,0.001,21.213l139.393,139.39L79.393,304.394c-5.857,5.858-5.857,15.355,0.001,21.213 C82.322,328.536,86.161,330,90,330s7.678-1.464,10.607-4.394l149.999-150.004c2.814-2.813,4.394-6.628,4.394-10.606 C255,161.018,253.42,157.202,250.606,154.389z"/></svg>');
	--check: url('data:image/svg+xml,<svg width="100%" height="100%" viewBox="0 0 24 24" role="img" xmlns="http://www.w3.org/2000/svg" aria-labelledby="okIconTitle" stroke="contextFill" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="none" color="contextFill"><title>check</title><polyline points="4 13 9 18 20 7"/></svg>');
	--edit: url('data:image/svg+xml,<svg fill="context-fill" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 528.899 528.899" xml:space="preserve"><title>edit</title><g><path d="M328.883,89.125l107.59,107.589l-272.34,272.34L56.604,361.465L328.883,89.125z M518.113,63.177l-47.981-47.981 c-18.543-18.543-48.653-18.543-67.259,0l-45.961,45.961l107.59,107.59l53.611-53.611 C532.495,100.753,532.495,77.559,518.113,63.177z M0.3,512.69c-1.958,8.812,5.998,16.708,14.811,14.565l119.891-29.069 L27.473,390.597L0.3,512.69z"/></g></svg>');
	--image: url('data:image/svg+xml,<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 980 736" preserveAspectRatio="xMidYMid meet"><title>image</title><g transform="translate(0,736) scale(0.100000,-0.100000)" fill="contextFill" stroke="none"><path d="M920 7343 c-431 -76 -769 -384 -887 -808 l-28 -100 0 -2755 0 -2755 27 -98 c74 -268 239 -497 466 -645 155 -101 310 -154 506 -172 76 -8 1335 -10 3976 -8 l3865 3 90 22 c414 97 716 387 832 798 l28 100 3 2700 c2 1926 0 2723 -8 2780 -17 122 -46 220 -100 331 -139 289 -385 492 -708 586 l-77 23 -3980 1 c-2189 1 -3991 -1 -4005 -3z m7949 -420 c273 -64 425 -211 493 -478 l23 -90 0 -2675 0 -2675 -23 -90 c-68 -267 -220 -414 -493 -478 l-94 -22 -3795 -3 c-2592 -2 -3830 0 -3906 8 -333 31 -529 165 -614 418 -52 156 -50 59 -50 2842 0 2783 -2 2686 50 2842 67 198 215 333 428 388 45 12 119 25 164 29 46 5 1802 8 3903 7 l3820 -1 94 -22z"/><path d="M1681 6319 c-242 -47 -461 -214 -570 -434 -66 -132 -86 -218 -85 -370 1 -157 22 -244 89 -373 104 -200 289 -351 511 -414 105 -30 304 -32 409 -4 302 80 529 313 600 616 19 82 19 264 1 351 -64 300 -306 547 -609 619 -88 21 -262 26 -346 9z"/><path d="M5405 4800 c-739 -627 -1325 -1115 -1331 -1112 -6 4 -234 186 -507 405 -273 220 -501 397 -508 395 -6 -2 -467 -368 -1025 -813 l-1013 -810 2 -920 2 -920 3875 0 3875 0 3 1531 2 1532 -1015 913 c-558 503 -1021 915 -1028 916 -6 1 -606 -502 -1332 -1117z"/></g></svg>');
	--keys: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 16 16" fill="context-fill" fill-opacity="context-fill-opacity"><title>key</title><path fill-rule="evenodd" d="M7.25 4a2.75 2.75 0 1 0 5.5 0 2.75 2.75 0 0 0-5.5 0ZM6 4a4 4 0 1 0 8 0 4 4 0 0 0-8 0Z" clip-rule="evenodd"/><path fill-rule="evenodd" d="M13.995 13.63c0 .345-.28.625-.625.625h-2.365v1.115a.625.625 0 1 1-1.25 0V7h1.25v6.005h2.365c.345 0 .625.28.625.625ZM8.152 7.264l.435-.435-.884-.884-.525.525c.277.316.606.585.974.794Zm-.908.908a5.026 5.026 0 0 1-.951-.817l-3.278 3.278-1.23 1.23a.625.625 0 0 0 .883.884l.788-.787 2.101 2.11a.625.625 0 0 0 .886-.881L4.34 11.076l2.904-2.904Z" clip-rule="evenodd"/></svg>');
	--drag-handle: url('data:image/svg+xml,<svg width="100%" height="100%" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><title>handler</title><path d="m 4.496094 0 c -0.832032 0 -1.5 0.671875 -1.5 1.5 s 0.667968 1.5 1.5 1.5 c 0.828125 0 1.5 -0.671875 1.5 -1.5 s -0.671875 -1.5 -1.5 -1.5 z m 6 0 c -0.832032 0 -1.5 0.671875 -1.5 1.5 s 0.667968 1.5 1.5 1.5 c 0.828125 0 1.5 -0.671875 1.5 -1.5 s -0.671875 -1.5 -1.5 -1.5 z m -6 6 c -0.832032 0 -1.5 0.671875 -1.5 1.5 s 0.667968 1.5 1.5 1.5 c 0.828125 0 1.5 -0.671875 1.5 -1.5 s -0.671875 -1.5 -1.5 -1.5 z m 6 0 c -0.832032 0 -1.5 0.671875 -1.5 1.5 s 0.667968 1.5 1.5 1.5 c 0.828125 0 1.5 -0.671875 1.5 -1.5 s -0.671875 -1.5 -1.5 -1.5 z m -6 6 c -0.832032 0 -1.5 0.671875 -1.5 1.5 s 0.667968 1.5 1.5 1.5 c 0.828125 0 1.5 -0.671875 1.5 -1.5 s -0.671875 -1.5 -1.5 -1.5 z m 6 0 c -0.832032 0 -1.5 0.671875 -1.5 1.5 s 0.667968 1.5 1.5 1.5 c 0.828125 0 1.5 -0.671875 1.5 -1.5 s -0.671875 -1.5 -1.5 -1.5 z m 0 0" fill="context-fill"/></svg>');
	--menu: url('data:image/svg+xml,<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 600 600" preserveAspectRatio="xMidYMid meet"><title>hamburger</title><g transform="translate(0.000000,600.000000) scale(0.100000,-0.100000)"	fill="context-fill" stroke="none"><path d="M458 5399 c-68 -16 -161 -70 -219 -128 -150 -151 -182 -368 -82 -565	32 -62 122 -153 189 -188 115 -62 -69 -58 2654 -58 2723 0 2539 -4 2654 58 67	35 157 126 189 188 46 91 60 158 55 261 -5 85 -9 102 -46 177 -52 104 -122 173 -229 224 l-78 37 -2525 2 c-1442 0 -2541 -3 -2562 -8z"/><path d="M466 3464 c-214 -52 -366 -242 -366 -458 0 -182 95 -342 251 -426 119 -63 -44 -60 2649 -60 2693 0 2530 -3 2649 60 285 152 339 541 106 764 -26 24 -72 58 -104 75 -123 65 62 61 -2656 60 -2098 -1 -2479 -3 -2529 -15z"/><path d="M440 1521 c-88 -28 -140 -60 -201 -120 -186 -187 -186 -485 0 -672 61 -61 123 -97 210 -123 50 -15 284 -16 2551 -16 2267 0 2501 1 2551 16 87 26 149 62 210 123 92 93 139 205 139 336 0 217 -137 396 -349 459 -50 15 -284 16 -2555 15 -2369 0 -2504 -1 -2556 -18z"/></g></svg>');
	--cross: url('data:image/svg+xml,<svg fill="currentColor" width="100%" height="100%" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg"><title>x</title><path d="M202.82861,197.17188a3.99991,3.99991,0,1,1-5.65722,5.65624L128,133.65723,58.82861,202.82812a3.99991,3.99991,0,0,1-5.65722-5.65624L122.343,128,53.17139,58.82812a3.99991,3.99991,0,0,1,5.65722-5.65624L128,122.34277l69.17139-69.17089a3.99991,3.99991,0,0,1,5.65722,5.65624L133.657,128Z"/></svg>');
	--subreddit: url('data:image/svg+xml,<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 230 230" preserveAspectRatio="xMidYMid meet"><title>r-slash</title><g transform="translate(0.000000,230.000000) scale(0.100000,-0.100000)" fill="contextFill" stroke="none"><path d="M1610 1139 c-228 -594 -417 -1085 -418 -1090 -3 -6 35 -9 98 -7 l101 3 400 1035 c219 569 408 1059 419 1088 l20 52 -103 0 -102 0 -415 -1081z"/><path d="M969 1636 c-109 -29 -216 -123 -271 -237 l-33 -69 -7 47 c-3 27 -7 92 -7 146 l-1 97 -117 0 -116 0 6 -112 c4 -62 7 -389 7 -725 l0 -613 129 0 130 0 3 448 c3 438 4 448 26 511 28 78 83 163 126 195 73 55 117 70 211 73 l90 2 3 117 c2 87 -1 120 -10 126 -19 12 -116 9 -169 -6z"/></g></svg>');
	--copy: url('data:image/svg+xml,<svg fill="contextFill" width="100%" height="100%" viewBox="0 0 36 36" version="1.1"  preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>copy-line</title><path d="M29.5,7h-19A1.5,1.5,0,0,0,9,8.5v24A1.5,1.5,0,0,0,10.5,34h19A1.5,1.5,0,0,0,31,32.5V8.5A1.5,1.5,0,0,0,29.5,7ZM29,32H11V9H29Z" class="clr-i-outline clr-i-outline-path-1"></path><path d="M26,3.5A1.5,1.5,0,0,0,24.5,2H5.5A1.5,1.5,0,0,0,4,3.5v24A1.5,1.5,0,0,0,5.5,29H6V4H26Z" class="clr-i-outline clr-i-outline-path-2"></path><rect x="0" y="0" width="36" height="36" fill-opacity="0"/></svg>');
	--phone: url('data:image/svg+xml,<svg fill="contextFill" width="100%" height="100%" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M20.629 5h-9.257a1.6 1.6 0 0 0-1.601 1.603V25.4a1.6 1.6 0 0 0 1.601 1.601h9.257c.883 0 1.6-.718 1.6-1.601V6.603c0-.885-.717-1.603-1.6-1.603zm-6.247 1.023h3.302v.768h-3.302v-.768zm1.619 19.395a1.024 1.024 0 0 1-1.023-1.021 1.023 1.023 0 0 1 2.044 0c-.001.494-.46 1.021-1.021 1.021zm5.028-3.501H10.971V7.704h10.058v14.213z"/></svg>');
	--block: url('data:image/svg+xml,<svg fill="contextFill" width="100%" height="100%" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M62-576a16.018,16.018,0,0,0-16,16,16.018,16.018,0,0,0,16,16,16.018,16.018,0,0,0,16-16A16.018,16.018,0,0,0,62-576Zm-14,16a14.016,14.016,0,0,1,14-14,13.926,13.926,0,0,1,9.154,3.432l-19.722,19.722A13.926,13.926,0,0,1,48-560Zm14,14a13.926,13.926,0,0,1-9.154-3.432l19.722-19.722A13.926,13.926,0,0,1,76-560,14.016,14.016,0,0,1,62-546Z" transform="translate(-46 576)"/></svg>');

	& p {
		margin: 1em 0;
	}
}

:root[data-theme="dark"] {
	--invert: 100%;
	--main-color: black;
	--background-color: rgba(49, 49, 49, 1);
	--contrast-color-1: rgba(60, 60, 60, 1);
	--contrast-color-2: rgba(70, 70, 70, 1);
	--contrast-color-3: rgba(80, 80, 80, 1);
	--contrast-color-4: rgba(115, 115, 115, 1);
	--contrast-color-5: rgba(150, 150, 150, 1);
	--contrast-color-0: rgba(255, 255, 255, 1);
}

:root[data-theme="light"] {
	--invert: 0%;
	--main-color: white;
	--background-color: rgba(240, 240, 240, 1);
	--contrast-color-1: rgba(195, 195, 195, 1);
	--contrast-color-2: rgba(185, 185, 185, 1);
	--contrast-color-3: rgba(175, 175, 175, 1);
	--contrast-color-4: rgba(140, 140, 140, 1);
	--contrast-color-5: rgba(105, 105, 105, 1);
	--contrast-color-0: rgba(0, 0, 0, 1);
}

html, body {
	overflow-anchor: none !important;
}

body {
	position: relative;
	font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
	line-height: 1.6;
	margin: 0 auto;
	padding: 0;
	color: var(--contrast-color-0);
	background-color: var(--background-color);
	background-image: radial-gradient(var(--contrast-color-3) 2px, transparent 0);
	background-size: 30px 30px;
	background-position: -5px -5px;
	transition: all 0.3s ease;
	display: block;

	& .svg-img {
		background-repeat: no-repeat;
		background-position: center;
	}

	& .pop-up {
		cursor: grab;

		& * {
			cursor: default;
		}
	} & .pop-up:active {
		cursor: grabbing;
	}

	& .pop-up {
		display: none;
		position: fixed;
		transform: translate(-50%, -50%);
		background-color: var(--main-color);
		border-radius: 20px;
		border: 2px solid var(--contrast-color-0);
		width: fit-content;
		height: fit-content;
		padding: 2em;
		padding-top: 1em;
		z-index: 4;
		align-items:last baseline;

		& > div.pop-up-header {
			position: relative;
			height: 40px;
			margin: 0 0 1em;
			padding: 0;
			width: 100%;
			left: 0em;
			display: flex;
			align-items: center;

			& button {
				position: relative;
				height: 30px;
				width: 30px;
				top: 0px;
				margin-left: auto;
				right: 0;
				border-radius: 100%;
			}

			& > div {
				position: relative;
				height: 100%;

				& img {
					position: relative;
					height: 100%;
				}
			}
		}
		
		& > * {
			margin: 1em;
		}

		& > span {
			display: flex;
			gap: 10px;
			height: 1.5em;
		}

		& button {
			border-radius: 10px;
			cursor: pointer;
		}

		& input {
			border-radius: 10px;
			font-family: OpenSans;
		}

		& input:focus {
			outline: none;
			border: 2px solid var(--pink-custom);
			position: relative;
		}

		& input ~ .floating-label {
			position: absolute;
			color: grey;
			font-size: 13.3333px;
			pointer-events: none;
			transition: ease all 0.3s;
			transform: translate(5px);
		}

		& input:focus + .floating-label, & input:not(:placeholder-shown) + .floating-label {
			position: absolute;
			width: fit-content;
			font-size: 10px;
			transform: translate(5px, -100%);
			/* background-color: #1a1a1a; */
		}

		& img {
			pointer-events: fill;
		}

		& keys {
			mask-image: var(--keys);
			background-color: var(--contrast-color-0);
			height: 100%;
			aspect-ratio: 1;
			position: relative;
			display: inline-block;
		}
	}

	& a.update-link:not(.mfc) {
		margin: 0 20px;
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;
		background-color: var(--pink-custom);
		border: none;
		border-radius: 100%;
		opacity: 0.5;
		text-decoration: none;
		position: relative;
		transition: all 0.3s ease;
		height: 40px;
		aspect-ratio: 1;

		background-image: var(--edit);
		background-size: 65%;
	}

	& button.delete-button {
		aspect-ratio: 1 / 1;
		border-radius: 100%;
		border: none;
		background-image: var(--cross);
		background-repeat: no-repeat;
		background-position: center;
		background-size: 60%;

		& img {
			fill: red;
		}
	}

	& input[type="checkbox"] {	
		aspect-ratio: 1 / 1;
		border-radius: 100%;
		appearance: none;
		background-color: white;
		border: 2px solid white;
		cursor: pointer;
	}

	& input[type="checkbox"]:checked {
		background-color: var(--pink-custom);
		border: 2px solid white;
	}
}

body.has-hover {
	& .update-link:not(.mfc):hover::after {
		display: none;
	}

	& .update-link:not(.mfc):hover {
		transform: scale(1.5);
		opacity: 1;
	}

	& button.delete-button:hover {	
		background-color: pink;
	}
}

/* The Home Page */
body.home {
	min-height: 80vh;

	& .pop-up.retroachievements-awards {
		min-height: 50vmin;
		max-height: 85vmin;
		height: fit-content;
		aspect-ratio: 1;
		font-size: 1.25vmax;
		z-index: 4;
		overflow-y: scroll;

		& .pop-up-header {
			& a {
				text-decoration: none;

				& img {
					height: 100%;
					margin: 0 10px;
				}
			}
		}

		& #pop-up-img {
			height: fit-content;
			width: fit-content;
			position: relative;
			border-radius: 10px;
			display: block;
			margin: 2.5vh auto;
			overflow: hidden;

			& > img {
				position: relative;
			}
		}

		& .pop-up-title {
			text-align: center;
			display: block;
		}

		& .data-container {
			position: relative;
			top: 0;

			& p {
				width: 100%;
				margin-bottom: -5px;

				& span {
					position: absolute;
					left: 30%;
					color: var(--contrast-color-0);
					display: inline-block;
					white-space: nowrap;
					overflow: hidden;
					text-overflow: ellipsis;
					width: 65%;

					& a {
						color: var(--pink-custom);
						text-decoration: none;

						& svg {
							position: relative;
							height: 1em;
							aspect-ratio: 1;
						}
					}

					& a:visited {
						color: pink;
					}
				}
			}
		}
	}

	& .pop-up.reddit-google {
		& span {
			& > div.svg-img {
				aspect-ratio: 1 / 1;
				-webkit-filter: invert(var(--invert));
				filter: invert(var(--invert));
			}

			& > div#keys-container {
				background-image: var(--keys);
			}

			& > div#subreddit-container {
				background-image: var(--subreddit);
			}
		}

		& #keywords-reddit, & #subreddit {
			width: 100%;
		}
	}

	& header {
		z-index: 2;
		position: sticky;
		top: 0;

		& > div {
			overflow: hidden;
			font-family: Hylia Serif;
			width: 100%;
			height: calc(min(170px, 20vmin) * 2 - (min(170px, 20vmin) * var(--scroll-ratio)));
			cursor: pointer;
			background-color: var(--main-color);
			background-size: cover;
			background-position: center;
			color: white;
			display: flex;
			justify-content: center;
			align-items: center;
			max-height: calc(min(170px, 20vmin) * 2);
			transition: 0.3s ease-out max-height;

			& h1 {
				text-shadow: 2px 2px black;
				font-size: 5.5vw;
				width: fit-content;
				margin: 0px;
				pointer-events: none;
				user-select: none;
				z-index: 1;
			}
		}

		& > svg {
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			opacity: 0.5;
			z-index: 0;
		}

		& nav {
			top: 0;
			padding: 1em 0;
			background-color: var(--contrast-color-1);
			backdrop-filter: blur(1px);
			color: var(--contrast-color-0);
			z-index: 3;
			font-size: 70%;
			display: flex;
			height: 3em;
			min-height: calc(1em);
			align-items: center;
			
			& > * {
				position: relative;
				margin: 0 10px;
				height: 3em;
			}

			& a.update-link {
				margin: 0 10px;
				height: 3em;
			}

			& svg#expand-retract-header {
				width: 3em;
				fill: var(--contrast-color-0);
				stroke-width: 0.1em;
			}

			& #ohto {
				position: absolute;
				top: 0;
				left: 11vw;
				transform: translate(-50%, -100%);
				height: 170px;
				max-height: 20vw;
				z-index: 4;
			
				& img {
					height: 100%;
					position: sticky;
					top: 0;
				}
			}

			& #twoB {
				position: absolute;
				top: 0;
				right: 11vw;
				transform: translate(50%, calc(100% * -493 / 920));
				max-height: 35vw;
				height: 300px;
				z-index: 4;
				pointer-events: none;
			
				& img {
					height: 100%;
					position: sticky;
					top: 0;
				}
			}

			& switch {
				width: 4em;
				height: 4em;
				background-color: var(--contrast-color-3);
				border-radius: 100%;
				display: flex;
				align-items: center;
				overflow: hidden;

				& g {
					transition: 0.3s ease-out all;
				}
				
				& g.dark {
					transform: translateX(-100%);
				}
			}
			
			& .grid-container {
				display: grid;
				padding: 0;
				gap: 10px;
				height: 3em;
				grid-auto-rows: 3em;
				grid-auto-columns: 3em;
				grid-auto-flow: column;
				grid-template-columns: repeat(auto-fill, 3em);

				& > * {
					height: 3em;
				}

				& .pop-up-open {
					text-decoration: none;
					position: relative;
					height: 3em;
					aspect-ratio: 1;
					color: black;
					transition: 0.2s ease;

					& reddit-google-img, & wikipedia-img {
						position: absolute;
						height: 100%;
						aspect-ratio: 1 / 1;
						border-radius: 0.5em;
						background-position: center;
						background-size: contain;
					}

					& reddit-google-img {
						background-image: url("./images/google-reddit.ico");
					}

					& wikipedia-img {
						background-image: url("./images/wikipedia.ico");
					}

					& span {
						position: absolute;
						transform: translate(0%, 100%);
						transition: .2s;
						color: var(--contrast-color-0);
					}
				}

				& .pop-up-open::after {
					position: absolute;
					left: 0px;
					top: 40px;
					content: "";
					transition: .3s ease;
				}
			}
		}
	}

	& header.hidden {
		& > div {
			max-height: 0;
		}
	}

	& section {
		margin: 0px 20px;
	}

	& .flex-container {
		contain: layout style;
		position: relative;
		overflow-anchor: none;
		margin: 1em 0 0 0;

		& #shortcuts {
			position: relative;
			transition: grid 0.3s ease;

			& h2 {
				display: flex;
				align-items: center;
			}

			& > section {
				transition: inherit;
				margin: 0;

				& > div.grid-container {
					display: grid;
					gap: 30px;
					grid-auto-rows: min(50px, 20vw);
					grid-auto-columns: min(50px, 20vw);
					grid-template-columns: repeat(auto-fill, calc(min(50px, 20vw)));
					max-width: 100%;
					margin-bottom: 40px;

					& a.shortcut-item, & a.shortcut-item.retroachievements-award {
						text-decoration: none;
						position: relative;
						height: min(50px, 20vw);
						aspect-ratio: 1 / 1;
						color: black;
						border-radius: 0.5em;

						& > img, & > skeleton {
							position: relative;
							height: 100%;
							width: 100%;
							object-fit: contain;
							transition: 0.2s ease;
							border-radius: 0.5em;
						}

						& span {
							position: absolute;
							bottom: 0;
							right: 0;
							height: 1em;
							padding: 0;
							color: var(--contrast-color-0);
							text-shadow: 1px 1px var(--main-color);
							transform: translate(50%, 0);
							transition: ease 0.3s all;
						}
					}

					& a.shortcut-item.retroachievements-award {
						cursor: pointer;

						& img {
							border-radius: 0;
						}
					}

					& a.shortcut-item.retroachievements-award.mastered img {border: 2px solid gold;}
					& a.shortcut-item.retroachievements-award:not(.mastered) img {border: 2px solid #e5e7eb}
				}

				& > p {
					height: 1em;
					width: fit-content;
					position: relative;
					padding: 0.25em 0;
					border-radius: 0.25em;
				}

				& > p.skeleton {
					width: calc(30px * 2 + min(50px, 20vw) * 3);
				}
			}

			& .gamecard-container {
				display: grid;
				grid-template-columns: 40px 1fr;

				& > span {
					gap: 15px;
					border-radius: 10px;
					background-image: var(--pink-purple);
					display: flex;
					align-items: center;
					justify-content: center;
					margin: 5px 0px;
				}

				& > span > p {
					width: max-content;
					height: fit-content;
					text-transform: uppercase;
					transform: rotate(-90deg);
				}

				& .gamecard-outercard {
					height: 300px;
					display: flex;
					gap: 5px;
					padding: 5px;

					& .gamecard, .gamecard > a{
						height: 100%;
						flex: 1;
						overflow-x: hidden;
						cursor: pointer;
						border-radius: 10px;
						transition: .3s ease;
						display: flex;
						justify-content: center;
					}

					& .gamecard.skeleton, .gamecard > a.skeleton{
						cursor: default;
					}

					& .gamecard {
						background-image: var(--pink-purple);
						white-space: nowrap;
					}

					& .gamecard > a {
						position: relative;
						background: #1a1a1a;
						transition: ease .3s;
						background-size: 100%;
						background-repeat: no-repeat;
						background-position: center;
						background-size: cover;

						& > span {
							width: fit-content;
							position: absolute;
							top: 50%;
							translate: 0 -50%;
							color: var(--pink-custom);
						}
					}
				}
			}

			& #my-anime-list {
				position: relative;
				transition: all 0.3s;

				& .card {
					position: relative;
					left: 50%;
					width: 100%;
					transform: translate(-50%, 0);
					height: 320px;
					--height: 300px;
					border-radius: 20px;
					text-decoration: none;
					background-image: var(--pink-purple);
					overflow: hidden;

					& .loader {
						height: 10px;
						top: 50%;
						left: 50%;
						transform: translate(-50%, -50%);
					}

					& .inner-card {
						height: inherit;
						transition: all .2s;
						display: grid;
						grid-auto-flow: column;
						overflow-x:  scroll;
						overflow-y: hidden;
						overscroll-behavior-x: contain;
						scroll-snap-type: x mandatory;
						scroll-behavior: smooth;
						scrollbar-width: none;
						white-space: nowrap;
						gap: 1.5vw;
						padding: 10px calc(50% - 300px / 4 * 3 / 2);
						touch-action: none;

						& a {
							height: 300px;
							aspect-ratio: 3/4;
							scroll-snap-align: center;
							transition: 0.3s ease;
							z-index: 0;
							border-radius: 20px;
							background-color: #1a1a1a;
							text-decoration: none;

							& img {
								height: 100%;
								width: 100%;
								border-radius: 20px;
							}

							& .paragraph-container {
								position: relative;
								top: calc(-100% - 4px);
								height: 100%;
								margin: 1em;
								font-size: 0.75em;

								& b {
									font-size: 1.5em;
									color: white;
								}

								& span > p {
									font-size: 0.8em;
									display: grid;
									grid-template-columns: 1fr 2fr;
									white-space: initial;
									width: 100%;
									color: white;
									pointer-events: none;
									margin: 5px 0;

									& span:nth-child(1) {
										color: #a1a1a1;
									}
								}
							}
						}
					}

					& .nav-button {
						cursor: pointer;
						position:absolute;
						height: 110%;
						width: 15%;
						top: -5%;
						z-index: 1;
						border: transparent;
						color: rgba(255, 255, 255, 1);
						font-size: 3vw;
						transition: all 0.5s;						

						& arrow-img {
							display: inline-block;
							background-image: var(--arrow);
							width: 100%;
							aspect-ratio: 1;
						}
					}
					
					& .nav-button.left {
						left: 0px;
						background-color: rgba(49, 49, 49, 1);
						mask-image: linear-gradient(to right, rgba(0,0,0,1), rgba(0,0,0,0)),
									linear-gradient(to right, rgba(0,0,0,1), rgba(0,0,0,0));
						-webkit-mask-image: linear-gradient(to right, rgba(0,0,0,1), rgba(0,0,0,0)),
											linear-gradient(to right, rgba(0,0,0,1), rgba(0,0,0,0));
						
						& arrow-img {
							transform: rotate(180deg);
						}
					}
					
					& .nav-button.right {
						right: -1px;
						background-color: rgba(49, 49, 49, 1);
						mask-image: linear-gradient(to left, rgba(0,0,0,1), rgba(0,0,0,0)),
									linear-gradient(to left, rgba(0,0,0,1), rgba(0,0,0,0));
						-webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1), rgba(0,0,0,0)),
											linear-gradient(to left, rgba(0,0,0,1), rgba(0,0,0,0));
					}
				}
			}
		}

		& aside {
			display: grid;
			position: relative;
			transition: width 0.3s ease-in, transform 0.3s ease-in;
			height: 100%;
			border-radius: 20px;
			text-wrap:wrap;
			overflow-x: hidden;
			overflow-y: auto;
			background-color: var(--main-color);
			grid-template-rows: 100px;

			& input {
				position: relative;
				width: 90%;
				height: 25px;
				top: 10px;
				border-radius: 20px;
				margin: 20px 0;
				border: none;
				padding: 10px 0;
				text-align: center;
				background-color: white;
				color: gray;
				border: 1px solid gray;
				transition: all 0.3s ease;
			}

			& input:focus {
				outline: none;
			}

			& > .loader {
				height: 6px;
				z-index: 3;
				--border: 1px solid white;
			}

			& input::placeholder {
				font-size: 1.1em;
				text-align: center;
				color: rgba(127, 127, 127, 1)
			}

			& .card {
				height: 100%;
				position: relative;
				top: 0;
				border-radius: 10px;
				text-decoration: none;
				transition: all .2s;
				display: flex;
				scrollbar-width: none;
				gap: 0;
				
				& .mfc-card {
					position: relative;
					width: 50%;
					height: fit-content;
					display: grid;
					gap: 20px;
					margin: 0;
					transition: ease 0.4s;
			
					& > .mfc {
						position: static;
						display: inline-block;
						width: 100%;
						aspect-ratio: 1 / 1;
						overflow: hidden;
						font-size: .75em;
						text-decoration: none;
						text-align: center;
						border-radius: 10px;
						padding: 0;
						transition: 0.3s all ease;
						border-width: 3px;
						border-style: solid;

						& img {
							position: relative;
							width: 100%;
							height: 100%;
							cursor: pointer;
						}
					}

					& > .mfc.action-dolls {border-color: #0080ff}

					& > .mfc.trading {border-color: orange}

					& > .mfc.prepainted {border-color: green}
				}

				& > .loader {
					width: 50px;
					position: absolute;
					top: 10%;
					left: 50%;
					transform: translate(-50%, 0);
					--border: 1px solid white;
				}
			}

			& > .button-bar {
				cursor: pointer;
				position: relative;
				top: 0px;
				left: 0px;
				height: 100%;
				border-top-left-radius: 10px;
				border-bottom-left-radius: 10px;
				grid-row-end: span 2;
				display: flex;
				align-items: center;
				justify-content: center;
				z-index: 1;
				font-size: 2em;
				background-color: var(--pink-custom);
				border: none;
				transition: all 0.3s;
				padding: 0%;

				& > button {
					cursor: pointer;
					position: absolute;
					height: 20px;
					top: 50%;
					transition: ease-out 0.25s;
					border: none;
					background-color: var(--pink-custom);
					transform: scale(0.5, 1);

					clip-path: path("m 0 0 C 6 6 20 0 20 10 c 0 10 -14 4 -20 10 Q 0 10 0 0");

					& span {
						display: flex;
						height: 100%;
						transform: rotate(0deg) translate(0%,-10%);
						align-items: center;
						justify-content: center;
					}
				}
			}
		}

		& aside.hidden {
			& > .button-bar {
				& > button {
					& span {
						transform: rotate(180deg) translate(0%,-10%);;
					}
				}
			}
		}
	}

	& footer {
		position: relative;
		text-align: center;
	}
}

body.home.has-hover {
	& .pop-up {
		& button:hover {
			border: 2px var(--pink-custom) solid;
		}
	}

	& header {
		& nav {
			& .grid-container {
				& .pop-up-open:hover {
					transform: scale(1.5);
					border-bottom-left-radius: 0;

					& span {
						transform: scale(1.5) translate(-50%, 100%);
					}
				}

				& .pop-up-open:hover::after {
					position: absolute;
					left: -12px;
					top: 50px;
					font-size: 80%;
					color: black;
					content: attr(alt);
					display: inline-block;
					z-index: 1;
					background-color: var(--pink-custom);
					width: max-content;
					text-align: center;
					border-top-right-radius: 3ex;
					border-bottom-left-radius: 3ex;
					border-bottom-right-radius: 3ex;
					padding: 0.5em 1em;
					transform: scale(0.75) translate(0, -75%);
				}
			}
		}
	}

	& .flex-container {
		& #shortcuts {
			& section {
				& .grid-container{
					& a.shortcut-item:hover {
						border-bottom-left-radius: 0;

						& > * {
							transform: scale(1.5);
							border-bottom-left-radius: 0;
						}
					}

					& a.shortcut-item::after {
						position: absolute;
						left: 0px;
						top: 50px;
						content: "";
						transition: .3s ease;
						font-size: 1em;
					}

					& a.shortcut-item:hover::after {
						position: absolute;
						left: -12px;
						top: 68px;
						font-size: 80%;
						color: black;
						content: attr(alt);
						display: inline-block;
						z-index: 1;
						background-color: var(--pink-custom);
						width: max-content;
						text-align: center;
						border-radius: 0 3ex 3ex 3ex;
						padding: 0.5em 1em;
					}
				}
			}

			& .gamecard-container {
				& .gamecard-outercard {
					& .gamecard:hover {
						flex: calc(var(--gamecard-count) - 1);
						background-size: cover;
						background-position: center;
						text-shadow: 0px 0px 5px black;
						box-shadow: 0px 0px 30px 1px var(--pink-custom);
					}

					& .gamecard a:hover {
						transform: scale(98%);
						font-size: 40px;
					}
				}
			}
		}

		& aside {
			& > .button-bar:hover {
				& button {
					transform: translate(calc(100% - 5px), 0) scale(1.5);

					& span {
						display: flex;
						color: #000;
					}
				}
			}
		}

		& aside.hidden {
			& > .button-bar:hover {
				& button {
					& span {
						transform: rotate(180deg);
					}
				}
			}
		}
	}
}

@media (orientation: landscape) {
	body.home {
		& .flex-container{
			display: grid;
			grid-template-columns: 54vw 2vw 1fr;
			transition: grid-template-columns 0.3s ease;

			& #shortcuts {
				grid-column-start: 1;
				grid-row-start: 1;
				width: 100%;
			}

			& aside {
				grid-column-start: 3;
				width: 100%;
				display: grid;
				grid-template-columns: 10px 43vw;

				& input {
					width: calc((46vw - 2vw - 10px) * 0.9);
					left: calc(((44vw - 10px) * 0.1) / 2);
				}

				& .card {
					overflow: hidden;

					& .mfc-card {
						position: relative;
						width: 50%;
						padding: 10px;
						grid-template-columns: repeat(auto-fill, minmax(21%, 1fr));
					}
				}

				& > .loader {
					top: calc((10px + 20px + 20px));
					left: calc(10px + 5% + 20px);
				}

				& .button-bar {
					width: 10px;

					& button {
						top: 50%;

						& span {
							color: var(--pink-custom);
						}
					}
				}
			}
		}

		& .flex-container:has(aside.hidden) {
			grid-template-columns: 76vw 2vw 1fr;

			& aside input {
				width: calc((24vw - 2vw - 10px) * 0.9);
				left: calc(((22vw - 10px) * 0.1) / 2);
			}
		}

		& .pop-up {
			left: 50%;
			top: 50%;
		}
	}

	body.has-hover {
		& .flex-container{
			& aside {
				& .card:hover {
					& .mfc {
						opacity: 0.5;
					}
					
					& .mfc:hover {
						opacity: 1;
					}
				}
			}
		}
	}
}

@media (orientation: portrait) {
	body.home {
		overflow-x: hidden;

		& .flex-container{
			display: flex;

			& #shortcuts {
				width: calc(100vw - 20px - 20px - 20px);
			}

			& aside {
				grid-template-columns: 20px 1fr;
				z-index: 1;
				transform: translateX(0);
				position: absolute;
				width: 100%;
				overflow: visible;
				right: 0;

				& input {
					left: 50%;
					transform: translate(-50%, 0);
				}

				& .card {
					overflow: hidden;
					width: 99%;
					grid-template-columns: calc((100vw - 20px) / 2) calc((100vw - 20px) / 2);
					
					& .mfc-card {
						position: static;
						min-width: calc(50vw - 20px - 20px);
						max-width: calc(50vw - 20px - 20px);
						margin: 10px;
						grid-template-columns: repeat(auto-fill, minmax(45%, 1fr));
					}
				}

				& > .loader {
					top: calc((10px + 20px + 20px));
					left: calc(20px + 5% + 20px);
				}

				& .button-bar {
					width: 20px;
					position: sticky;
					top: 0px;

					& button {
						top: 10px;
						transform: translate(20px, 0);

						& span {
							color: black;
							transform: rotate(180deg) translate(0, -2px);
						}
					}
				}
			}

			& aside.hidden {
				width: 20px;

				& .button-bar button {
					transform: rotate(180deg) translate(20px, 0);
				}
			}
		}

		& .pop-up{
			top: 50%;
			left: 50%;
		}
	}
}

/* Shortcuts */
body.update {
	min-height: 100vh;
	width: 100vw;

	& header {
		background-image: url("https://storage.googleapis.com/statisticshock_github_io_public/headers/ps2.webp");
		background-color: var(--contrast-color-4);
		height: fit-content;
		text-align: center;
		position: sticky;
		top: 0;
		margin: 0 auto;
		padding: 2em;
		z-index: 2;

		& h1 {
			margin: 0;
		}
	}

	& > .loader {
		position: absolute;
		top: 50%;
		left: 50%;
		height: 5em;
		transform: translate(-50%, -50%);

		& .loading {
			background-color: var(--contrast-color-0);
			border: 5px double var(--main-color);
		}
	}

	& div#content {
		position: relative;
		width: 100vw;
		overflow: visible;

		& > * {
			margin: 2em;
		}

		& div#upload {
			container-type: inline-size;

			& div {
				> * {
					cursor: pointer;
				}
			}

			& button {
				background-color: var(--pink-custom);
				font-size: 2.5cqw;
				text-transform: uppercase;
				cursor: pointer;
			}

			& button:active {
				filter: grayscale(25%);
			}
		}

		& div.folder {
			position: relative;
			height: fit-content;
			width: calc(95vw - 4em);
			margin: 10px auto;
			padding: 10px;
			background-color: var(--contrast-color-1);

			& div {
				padding: 5px;
				background-color: var(--contrast-color-2);
				margin: 10px 0;
				border-radius: 20px;
			}

			& div.folder-wrapper {
				text-align: center;
			}

			& shortcuts-wrapper {
				display: grid;
				gap: 5px;
				padding: 10px;
				background-color: var(--contrast-color-2);
				border-radius: 15px;

				shortcut {
					margin: 0 auto;
					position: relative;
					background-color: var(--contrast-color-3);
					display: grid;
					gap: 15px;
					align-content: center;
					padding: 0.5em 1em;
					border-radius: calc(20px - 5px);
					grid-template-columns: 5em 5fr 1fr;
					

					& > shortcut-img-container {
						height: auto;
						width: auto;
						align-items: center;
						display: flex;
						
						& img {
							position: relative;
							width: 100%;
							left: 50%;
							transform: translate(-50%, 0);
							border-radius: 5px;
						} 
					}

					& > div.text-container {
						display: flex;
						flex-direction: column;
						justify-content: space-evenly;
						overflow-y: hidden;
						background-color: inherit;
						width: auto;

						& > shortcut-name-container, & shortcut-link-container, & shortcut-parent-container {
							text-overflow: ellipsis;
							overflow-y: hidden;
							white-space: nowrap;

							& span {
								height: 100%;
								width: 100%;
							}
						}
					}

					& > shortcut-mobile-container {
						width: 100%;
						aspect-ratio: 1 / 1;
						align-items: center;
						display: flex;
						position: relative;
						padding: 2px;
						background-color: white;
						border-radius: 100%;
						margin: auto;

						& input {
							all: unset;
							background-image: var(--phone);
							aspect-ratio: 1 / 1;
							width: calc(100% - 2px * 2);
							border-radius: 100%;
							z-index: 1;
							margin: 0 auto;
						}

						& input:not(:checked) ~ block {
							background-image: var(--block);
							width: calc(100% - 2px * 2);
							aspect-ratio: 1 / 1;
							position: absolute;
							z-index: 0;
						}
					} & > shortcut-mobile-container:has(input:checked) {background-color: var(--pink-custom);}
				}
			}
		}

		& div.mfc {
			width: calc(100vw - 4em);
			height: calc(100vh - 11em);
			display: grid;
			gap: 10px;
			
			& > * {
				position: relative;
			}

			& div.img-wrapper {
				width: fit-content;
				& a {

					& img {
						border: 3px solid var(--color);
					}

					& img.icon-image {
						position: absolute;
						z-index: 1;
						height: 4.5em;
						transform: translate(-25%, -25%);
						border-radius: 3em;
					}

					& img.main-image {
						position: relative;
						max-height: 100%;
						max-width: 100%;
						border-radius: 1em;
					}
				}
			}

			& div.data-wrapper {
				width: 100%;
				margin: 0 auto;
				overflow: hidden;
				height: fit-content;
				
				& > line {
					display: grid;
					overflow-y: scroll;
					gap: 2.5vw;
					margin: 0 0.5em 0.5em;
					padding: 0 1em;
					border-radius: 1em;					
					background-color: var(--contrast-color-1);
					border: 3px solid var(--color);

					& > * {
						align-content: center;
						border: none;
						height: 3em;
					}

					& > p {
						display: block;
						text-align: end;
						color: gray;
					}

					& a, & null {
						height: 5em;
					}
					
					& a {
						border-radius: 1em;
						display: block;
						margin: 0;
						color: var(--pink-custom);
					}

					& null {
						display: block;
						margin: auto 0;
					}

					& copy {
						aspect-ratio: 1 / 1;
						mask: var(--copy);
						mask-repeat: no-repeat;
						background-color: var(--pink-custom);
						display: inline-block;
						position: relative;
						cursor: pointer;
						margin: auto;
					}

					& null:before {
						color: aqua;
						content: "Vazio";
					}
				}

				& button {
					width: calc(100% - 1em);
					height: 3em;
					margin: 1em 0.5em 0.5em;
					border-radius: 1em;
					border: none;
					background-color: var(--pink-custom);
					text-transform: uppercase;
					display: none;
				}

				& button:active {
					opacity: 0.9;
				}
			}
		} & div.mfc.prepainted {--color: green} div.mfc.action-dolls {--color: #0080ff} div.mfc.trading {--color: orange}

		& div.headers {
			width: 95vw;
			margin: 2em auto;
			display: grid;
			grid-auto-flow: row;
			gap: 10px;
			transition: ease 0.3s grid;

			& div.header {
				width: calc(100% - 2em);
				padding: 1em;
				display: grid;
				grid-template-columns: 1fr 0.1px 6vmin 6vmin;
				gap: 15px;
				margin: 0;
				background-color: var(--contrast-color-3);
				border-radius: 10px;
				overflow: hidden;

				& > * {
					max-width: 100%;
					align-self: center;
				}

				& img {
					border-radius: 10px;
					width: 100%;
				}

				& img.broken {
					max-height: 5em;
				}

				& span {
					overflow: scroll;
					height: 100%;

					& p {
						margin: 0;
						height: 100%;
					}
				}

				& input {
					width: 100%;
				}
			}

			& div.header.hidden {
				grid-template-columns: 30vw 1fr 6vmin 6vmin;
			}

			& div#upload {
				width: 100%;
				overflow: hidden;
				display: flex;
				flex-wrap: wrap;
				gap: 10px;
				
				& > div {
					position: relative;
					width: calc(80% - 10px * 2);
					height: 30vmin;
					border: 10px dashed gray;
					border-radius: 20px;
					padding: 3vh 0;
					text-align: center;

					& img-upload {
						height: 100%;
						aspect-ratio: 980 / 736;
						display: inline-block;
						background-color: gray;
						mask: var(--image);
						mask-repeat: no-repeat;
						margin: 0 auto;
					}

					& input {
						opacity: 0;
						width: 100%;
						height: 100%;
						position: absolute;
						top: 0;
						left: 0;
					}
				}

				& button#upload-trigger {
					width: calc(20% - 10px);
					border-radius: 20px;
					border: none;
				}

				& p.filename {
					background-color: var(--contrast-color-3);
					width: 100%;
					margin: 0;
					padding: 1em;
					border-radius: 1em;
				}
			}
		}
	}
}

@media (orientation: landscape) {
	body.update {
		& div#content {
			& div.folder {
				& shortcuts-wrapper {
					grid-template-columns: repeat(auto-fill, calc((95vw - 4em - 5px * 2 - 10px * 2) / 3));
					
					& shortcut {
						width: calc(100% - 1em * 2);
					}
				}
			}

			& div.mfc {
				grid-template-columns: auto 1fr;

				& div.img-wrapper {
					max-height: calc(100vh - 11em);
					margin: 0;
				}

				& div.data-wrapper {
					& > line {
						grid-template-columns: 15vmin 1fr 5vmin;
					}
				}
			}
		}
	}
}

@media (orientation: portrait) {
	body.update {
		& div#content {
			& div.folder {
				grid-auto-flow: row;

				& shortcut {
					font-size: 0.75em;
					width: calc(95vw - 4em - 5px * 2 - 1em * 2 - 1em * 2);
				}
			}

			& div.mfc {
				grid-template-rows: 30vh 1fr;

				& div.img-wrapper {
					max-width: 30vh;
					margin: 0 auto;
				}

				& div.data-wrapper {
					& line {
						grid-template-columns: 20vmin 1fr 5vmin;

						& > * {
							font-size: 0.75em;
						}
					}
				}
			}
		}
	}	
}

/* 404 */
body.not-found {
	height: 100vh;
	width: 100vw;
	display: flex;
	align-items: center;
	justify-content: center;

	& > div {
		display: grid;
		grid-template-columns: 45vmin 45vmin;
		gap: 2.5vmin;
		border-radius: 3em;
		overflow: hidden;

		& > * {
			width: 45vmin;
			aspect-ratio: 1 / 1;
		}

		& > div {
			display: flex;
			flex-flow: column;
			align-items: center;
			justify-content: center;
			background-color: var(--main-color);
			padding: 0;
			height: 45vmin;
			container-type: inline-size;
		
			& > * {
				margin: 0;
				padding: 0;
			}

			& > h1 {
				font-size: 5.0cqw;
			}

			& > p {
				font-size: 4cqw;
			}
		}
	}
}

/* HELPERS */
body {
	& img {
		-moz-user-select: none;
		user-select: none;
		-webkit-user-select: none;
	}

	& .switch {
		/* font-size: 17px; */
		text-transform: uppercase;
		position: absolute;
		top: 50%;
		transform: translate(0, -50%);
		display: inline-block;
		height: 2em;
		border-radius: 1em;
		cursor: pointer;

		/* Hide default HTML checkbox */
		& input {
			opacity: 0;
			width: 0;
			height: 0;
		}

		/* The slider */
		& .slider {
			position: absolute;
			border: 2px solid var(--pink-custom);
			background-color: var(--contrast-color-2);
			inset: 0;
			border-radius: 1000px;
			transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
		}

		& .slider::before {
			position: absolute;
			content: "";
			height: 80%;
			aspect-ratio: 1;
			left: 0.2em;
			top: 50%;
			transform: translateY(-50%);
			bottom: 0.2em;
			background-color: var(--contrast-color-0);
			border-radius: inherit;
			transition: all 0.3s cubic-bezier(0.23, 1, 0.320, 1);
		}

		& input:checked + .slider::before {
			transform: translateX(var(--total-transition)) translateY(-50%);
		}
	}

	& .pulse {
		animation: pulse 0.3s ease-in-out 6;
	}

	& .loader {
		position: absolute;
		max-height: 5%;
		max-width: 5%;
		aspect-ratio: 1;

		& .loading {
			--delay: calc(var(--index) / var(--count));
			--rotation: calc((360 / var(--count) * var(--index)));
			position: absolute;
			top: -25%;
			left: 25%;
			width: 50%;
			height: 150%;
			background-color: black;
			border: var(--border);
			transform: rotate(calc(var(--rotation) * 1deg)) translate(0%, calc(var(--translation) * 1%));
			animation: spinner 1s calc(var(--delay) * 1s) infinite ease;
		}
	}

	& .follower {
		pointer-events: none;
		background-color: #1a1a1a;
		transform: translateX(-25%);
		position: absolute;
		width: max-content;
		height: fit-content;
		border-radius: 0.75em;
		padding: 5px;
		top: 0px;
		left: 0px;
	}

	& .skeleton {
		animation: skeleton-pulse 1s forwards infinite alternate;
	}
}

@keyframes spinner {
	0%, 10%, 20%, 30%, 50%, 60%, 70%, 80%, 90%, 100% {
		transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
	}

	50% {
		transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1.5%));
	}
}

@keyframes skeleton-pulse {
	from {
		background-color: var(--contrast-color-5);
		background-image: unset;
		box-shadow: unset;
	}

	to {
		background-color: var(--contrast-color-3);
		background-image: unset;
		box-shadow: unset;
	}
}

@keyframes expand-header {
	from {
		grid-template-columns: 30vw 1fr 6vmin 6vmin;
	}

	to {
		grid-template-columns: 1fr 0.1px 6vmin 6vmin;
	}
}

@keyframes retract-header {
	from {
		grid-template-columns: 30vw 1fr 6vmin 6vmin;
	}

	to {
		grid-template-columns: 1fr 0.1px 6vmin 6vmin;
	}
}